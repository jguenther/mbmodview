using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace MBModViewer
{
    /// <summary>
    /// DataItem implementation to hold triggers.  Same as generic DataItem except has 3 doubles for 
    /// interval data, an extra Int64[] for Conditions and autogenerated a Trigger# name.
    /// </summary>
    internal sealed class TriggerDataItem : DataItem
    {
        internal Double Check, Delay, Rearm;

        #region properties
        //base unchanged:
        //Int64 ID { get { return _id; } }
        //String Name { get { return _name; } set { _name = value; } }
        //String Source { get { return _source; } set { _source = value; } }
        //Int64[] Content { get { return _content; } set { return _content; } }                
        internal Int64[] Condition { get { return _conditions; } set { _conditions = value; } }                
        #endregion

        #region private fields
        //base:
        //Int32 _id;
        //String _name, _source;
        //Int64[] _content;
        private Int64[] _conditions;
        #endregion

        #region ctor
        /// <summary>Generic constructor.  References base constructor also sets Content to Int64[1]</summary>        
        /// <param name="ItemID">Reference ID.  This will be accessible as .ID</param>
        internal TriggerDataItem(Int32 ItemID)
            : base(ItemID)
        {            
            this.Name = "Trigger" + ItemID.ToString();
        }
        #endregion
    }
}
